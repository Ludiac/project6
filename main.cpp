// изначально в классе IDevice для хранения названия фирмы (firm) и страны произвотства (country_of_manufacture) использовал std::string,
// но они занимают аж 32 байта, я решил, что лучше использовать char[], что оказалось намного труднее, пришлось использовать костыли типа
// strcpy в конструкторе (конечно было бы правильно хранить целочисленную переменную а потом с помощью отдельной функции дешифровать значение).
//
// моя IDE показывает предупреждение во время инициализации новых единиц классов:
// "ISO C++ does not allow conversion from string literal to 'char *'" (касательно "LG" и подобного)
// долго пытался найти способ чтобы избежать предупреждения, но способа не нашел (опять же, наверное просто не стоит использовать char[])
//
// также пришлось отказаться от использования функции show_features(), она наследуется классом Smartphone от
// другого класса и через указатель на IDevice её вызвать не получается
//
// я особо не задумывался над тем, что должно быть в public, protected, private,
// интуитивно ставил конструкторы/деструкторы в паблик, переменные и функции в протектед.
//
// класс IConnected_to_network создан, чтобы показать наследование от нескольких классов (класс Смартфон).
// одновременное наследование от классов Mechanical и Electrical не имеет смысла
//
// в программе нет ни одного геттера и сеттера. сеттеры мне кажутся бесполезными в
//контексте этой программы, а геттерам я не придумал применения, так что их тоже нет
//
// не представляю, если в этой программе могут быть утечки памяти или дубликации полей классов, я работаю в новой IDE и пока не знаю как смотреть такие вещи.
//
// вывод программы не особо показательнвй, но я неожиданно долго всё это делал (два с лишним дня), и стало лень форматировать вывод, главное всё работает


#include "metaClasses.cpp" //
#include "appliances.cpp"  // не знаю почему включение .h файлов не даёт программе собраться

int main() {
    IDevice * vec[4];
    vec[0] = new Washing_machine ("LG", "CH", plugged_in_only, 10);
    vec[1] = new Washing_machine ("SAMSUNG", "SK", plugged_in_only, 7);
    vec[2] = new Mechanical_scales ("APPLE", "US", 15);
    vec[3] = new Smartphone ("SAMSUNG", "SK", sealed_rechargeable_battery, true);
    vec[0]->product_info();
    vec[1]->product_info();
    vec[2]->product_info();
    vec[3]->product_info();
    //vec[3]->show_features();

    for (int i = 0; i < 4; i++)
        delete vec[i];

    return 0;
}
